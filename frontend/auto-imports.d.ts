/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const AddDownloadTasks: typeof import('./wailsjs/go/app/App.js')['AddDownloadTasks']
  const BrowserOpenURL: typeof import('./wailsjs/runtime/runtime.js')['BrowserOpenURL']
  const CanResolveFilePaths: typeof import('./wailsjs/runtime/runtime.js')['CanResolveFilePaths']
  const CheckFFmpeg: typeof import('./wailsjs/go/app/App.js')['CheckFFmpeg']
  const ClipboardGetText: typeof import('./wailsjs/runtime/runtime.js')['ClipboardGetText']
  const ClipboardSetText: typeof import('./wailsjs/runtime/runtime.js')['ClipboardSetText']
  const EffectScope: typeof import('vue')['EffectScope']
  const Environment: typeof import('./wailsjs/runtime/runtime.js')['Environment']
  const EventsEmit: typeof import('./wailsjs/runtime/runtime.js')['EventsEmit']
  const EventsOff: typeof import('./wailsjs/runtime/runtime.js')['EventsOff']
  const EventsOn: typeof import('./wailsjs/runtime/runtime.js')['EventsOn']
  const EventsOnMultiple: typeof import('./wailsjs/runtime/runtime.js')['EventsOnMultiple']
  const EventsOnce: typeof import('./wailsjs/runtime/runtime.js')['EventsOnce']
  const GetConfig: typeof import('./wailsjs/go/app/App.js')['GetConfig']
  const GetTaskParts: typeof import('./wailsjs/go/app/App.js')['GetTaskParts']
  const Hide: typeof import('./wailsjs/runtime/runtime.js')['Hide']
  const LogDebug: typeof import('./wailsjs/runtime/runtime.js')['LogDebug']
  const LogError: typeof import('./wailsjs/runtime/runtime.js')['LogError']
  const LogFatal: typeof import('./wailsjs/runtime/runtime.js')['LogFatal']
  const LogInfo: typeof import('./wailsjs/runtime/runtime.js')['LogInfo']
  const LogPrint: typeof import('./wailsjs/runtime/runtime.js')['LogPrint']
  const LogTrace: typeof import('./wailsjs/runtime/runtime.js')['LogTrace']
  const LogWarning: typeof import('./wailsjs/runtime/runtime.js')['LogWarning']
  const Message: typeof import('./src/plugins/message/index')['Message']
  const OnFileDrop: typeof import('./wailsjs/runtime/runtime.js')['OnFileDrop']
  const OnFileDropOff: typeof import('./wailsjs/runtime/runtime.js')['OnFileDropOff']
  const OpenExplorer: typeof import('./wailsjs/go/app/App.js')['OpenExplorer']
  const OpenFile: typeof import('./wailsjs/go/app/App.js')['OpenFile']
  const OpenFileWithSystemPlayer: typeof import('./wailsjs/go/app/App.js')['OpenFileWithSystemPlayer']
  const Quit: typeof import('./wailsjs/runtime/runtime.js')['Quit']
  const RemoveAllTask: typeof import('./wailsjs/go/app/App.js')['RemoveAllTask']
  const RemoveTask: typeof import('./wailsjs/go/app/App.js')['RemoveTask']
  const ResolveFilePaths: typeof import('./wailsjs/runtime/runtime.js')['ResolveFilePaths']
  const SaveConfig: typeof import('./wailsjs/go/app/App.js')['SaveConfig']
  const ScreenGetAll: typeof import('./wailsjs/runtime/runtime.js')['ScreenGetAll']
  const SetDownloadDir: typeof import('./wailsjs/go/app/App.js')['SetDownloadDir']
  const SetFFmpegPath: typeof import('./wailsjs/go/app/App.js')['SetFFmpegPath']
  const Show: typeof import('./wailsjs/runtime/runtime.js')['Show']
  const ShowDownloadInfo: typeof import('./wailsjs/go/app/App.js')['ShowDownloadInfo']
  const VAlert: typeof import('./src/plugins/alert/index')['VAlert']
  const VDialog: typeof import('./src/plugins/dialog/index')['VDialog']
  const VDialogPlugin: typeof import('./src/plugins/dialog/index')['VDialogPlugin']
  const WindowCenter: typeof import('./wailsjs/runtime/runtime.js')['WindowCenter']
  const WindowFullscreen: typeof import('./wailsjs/runtime/runtime.js')['WindowFullscreen']
  const WindowGetPosition: typeof import('./wailsjs/runtime/runtime.js')['WindowGetPosition']
  const WindowGetSize: typeof import('./wailsjs/runtime/runtime.js')['WindowGetSize']
  const WindowHide: typeof import('./wailsjs/runtime/runtime.js')['WindowHide']
  const WindowIsFullscreen: typeof import('./wailsjs/runtime/runtime.js')['WindowIsFullscreen']
  const WindowIsMaximised: typeof import('./wailsjs/runtime/runtime.js')['WindowIsMaximised']
  const WindowIsMinimised: typeof import('./wailsjs/runtime/runtime.js')['WindowIsMinimised']
  const WindowIsNormal: typeof import('./wailsjs/runtime/runtime.js')['WindowIsNormal']
  const WindowMaximise: typeof import('./wailsjs/runtime/runtime.js')['WindowMaximise']
  const WindowMinimise: typeof import('./wailsjs/runtime/runtime.js')['WindowMinimise']
  const WindowReload: typeof import('./wailsjs/runtime/runtime.js')['WindowReload']
  const WindowReloadApp: typeof import('./wailsjs/runtime/runtime.js')['WindowReloadApp']
  const WindowSetAlwaysOnTop: typeof import('./wailsjs/runtime/runtime.js')['WindowSetAlwaysOnTop']
  const WindowSetBackgroundColour: typeof import('./wailsjs/runtime/runtime.js')['WindowSetBackgroundColour']
  const WindowSetDarkTheme: typeof import('./wailsjs/runtime/runtime.js')['WindowSetDarkTheme']
  const WindowSetLightTheme: typeof import('./wailsjs/runtime/runtime.js')['WindowSetLightTheme']
  const WindowSetMaxSize: typeof import('./wailsjs/runtime/runtime.js')['WindowSetMaxSize']
  const WindowSetMinSize: typeof import('./wailsjs/runtime/runtime.js')['WindowSetMinSize']
  const WindowSetPosition: typeof import('./wailsjs/runtime/runtime.js')['WindowSetPosition']
  const WindowSetSize: typeof import('./wailsjs/runtime/runtime.js')['WindowSetSize']
  const WindowSetSystemDefaultTheme: typeof import('./wailsjs/runtime/runtime.js')['WindowSetSystemDefaultTheme']
  const WindowSetTitle: typeof import('./wailsjs/runtime/runtime.js')['WindowSetTitle']
  const WindowShow: typeof import('./wailsjs/runtime/runtime.js')['WindowShow']
  const WindowToggleMaximise: typeof import('./wailsjs/runtime/runtime.js')['WindowToggleMaximise']
  const WindowUnfullscreen: typeof import('./wailsjs/runtime/runtime.js')['WindowUnfullscreen']
  const WindowUnmaximise: typeof import('./wailsjs/runtime/runtime.js')['WindowUnmaximise']
  const WindowUnminimise: typeof import('./wailsjs/runtime/runtime.js')['WindowUnminimise']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useBasicStore: typeof import('./src/stores/basic')['useBasicStore']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useLink: typeof import('vue-router')['useLink']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTheme: typeof import('./src/hooks/useTheme')['useTheme']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
